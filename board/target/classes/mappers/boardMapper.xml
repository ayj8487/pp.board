<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.mappers.board">

<!-- id는 매퍼내에서 쿼리를 구분짓는 고유이름 resultType은 쿼리의 결과의 형태 -->

<!-- Request processing failed; nested exception is org.springframework.jdbc.UncategorizedSQLException: 
 실행시 위의 500오류 발생시 테이블을 찾을수 없다는 오류이며  
 테이블 앞에 데이터베이스명을 붙히면 해결 
 from tbl_board => from board.tbl_board -->

<!-- 현재 프로젝트에서는 board하나만 사용하므로 쿼리문마다 board를 붙히지않고
 root-context.xml의 접속주소에 데이터베이스명을 미리 입력해주면 해결 할수있다.
 Ex) value="jdbc:mariadb://127.0.0.1:3305/board -->	
	
	<!-- 게시물 목록 -->
<select id="list" resultType="com.board.domain.BoardVO">
 select
  	bno, title, content, writer, regDate, viewCnt
 from tbl_board
</select>

<!-- 게시물 작성 -->
<insert id="write" parameterType="com.board.domain.BoardVO">
 insert into
	  tbl_board(title, content, writer)
   values(#{title}, #{content}, #{writer})
</insert>

<!-- 게시물 조회 -->
<select id="view" parameterType="int" resultType="com.board.domain.BoardVO">
 select 
	  bno, title, content, writer, regDate, viewCnt
 from 
	  tbl_board
 where
	  bno = #{bno}   
</select>
<!-- 파라미터 타입(parameterType)은 매퍼에 들어오는 데이터, 
	 리설트 타입(resultType)은 매퍼가 내보내는 데이터.
정수(int)형인 게시물 번호를보내고 게시물의 데이터형인 BoardVO를 내보냄. -->

<!-- 게시물 수정 -->
<update id="modify" parameterType="com.board.domain.BoardVO" >
 update tbl_board
	  set
  		 title = #{title},
  		 content = #{content},
   		 writer = #{writer}
 	 where bno = #{bno}
</update>

<!-- 게시물 삭제 -->
<delete id="delete" parameterType="int">
 delete
  from tbl_board
 where bno = #{bno}
</delete>

<!-- 게시물 총 갯수 -->
<select id="count" resultType="int">
 select count(bno) from tbl_board
</select>

<!-- 게시물 목록 + 페이징(10개씩) -->
<select id="listPage" parameterType="hashMap" resultType="com.board.domain.BoardVO">
 select
  bno, title, writer, regDate, viewCnt
 from tbl_board
 order by bno desc
  limit #{displayPost}, #{postNum}
</select>

<!-- 게시물 목록 + 페이징 + 검색(listPageSearch는 컨트롤러의 listPage를 복사했기 때문에 매퍼도 복사해서 사용가능 -->
<!-- concat 함수를 사용해 문자열을 합쳐서 사용해야 정확한 검색가능 -->
<!-- 조건문을 이용해 searchType의 값에 따라 제목,내용,제목+내용,작성자를 구분 -->
<select id="listPageSearch" parameterType="hashMap" resultType="com.board.domain.BoardVO">
 select
  bno, title, writer, regDate, viewCnt
 from tbl_board
 
 <if test='searchType.equals("title")'>
  WHERE title LIKE concat('%', #{keyword}, '%')
 </if>
 
 <if test='searchType.equals("content")'>
  WHERE content LIKE concat('%', #{keyword}, '%')
 </if>
 
 <if test='searchType.equals("title_content")'>
  WHERE title LIKE concat('%', #{keyword}, '%') 
   or content LIKE concat('%', #{keyword}, '%')
 </if>
 
 <if test='searchType.equals("writer")'>
  WHERE writer LIKE concat('%', #{keyword}, '%')
 </if>
 
 order by bno desc
  limit #{displayPost}, #{postNum}
</select> 

</mapper>